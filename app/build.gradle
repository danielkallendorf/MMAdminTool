/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.5'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation group: 'org.docx4j', name: 'docx4j', version: '6.1.2'

    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-calendar:v3-rev20220715-2.0.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.3'
    }

application {
    // Define the main class for the application.
    mainClass = 'com.kallendorf.MMAdminMain'
    sourceCompatibility = 11
    targetCompatibility = 11
    version = '1.0'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.kallendorf.mmcal.MMAdminMain'
    }

    // Will include every single one of your dependencies, project or not
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}








